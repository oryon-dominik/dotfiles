# Result of uv generate-shell-completion powershell
# Do not modify :)
using namespace System.Management.Automation
using namespace System.Management.Automation.Language

Register-ArgumentCompleter -Native -CommandName 'uv' -ScriptBlock {
    param($wordToComplete, $commandAst, $cursorPosition)

    $commandElements = $commandAst.CommandElements
    $command = @(
        'uv'
        for ($i = 1; $i -lt $commandElements.Count; $i++) {
            $element = $commandElements[$i]
            if ($element -isnot [StringConstantExpressionAst] -or
                $element.StringConstantType -ne [StringConstantType]::BareWord -or
                $element.Value.StartsWith('-') -or
                $element.Value -eq $wordToComplete) {
                break
        }
        $element.Value
    }) -join ';'

    $completions = @(switch ($command) {
        'uv' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('run', 'run', [CompletionResultType]::ParameterValue, 'Run a command or script')
            [CompletionResult]::new('init', 'init', [CompletionResultType]::ParameterValue, 'Create a new project')
            [CompletionResult]::new('add', 'add', [CompletionResultType]::ParameterValue, 'Add dependencies to the project')
            [CompletionResult]::new('remove', 'remove', [CompletionResultType]::ParameterValue, 'Remove dependencies from the project')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Update the project''s environment')
            [CompletionResult]::new('lock', 'lock', [CompletionResultType]::ParameterValue, 'Update the project''s lockfile')
            [CompletionResult]::new('export', 'export', [CompletionResultType]::ParameterValue, 'Export the project''s lockfile to an alternate format')
            [CompletionResult]::new('tree', 'tree', [CompletionResultType]::ParameterValue, 'Display the project''s dependency tree')
            [CompletionResult]::new('tool', 'tool', [CompletionResultType]::ParameterValue, 'Run and install commands provided by Python packages')
            [CompletionResult]::new('python', 'python', [CompletionResultType]::ParameterValue, 'Manage Python versions and installations')
            [CompletionResult]::new('pip', 'pip', [CompletionResultType]::ParameterValue, 'Manage Python packages with a pip-compatible interface')
            [CompletionResult]::new('venv', 'venv', [CompletionResultType]::ParameterValue, 'Create a virtual environment')
            [CompletionResult]::new('build', 'build', [CompletionResultType]::ParameterValue, 'Build Python packages into source distributions and wheels')
            [CompletionResult]::new('cache', 'cache', [CompletionResultType]::ParameterValue, 'Manage uv''s cache')
            [CompletionResult]::new('self', 'self', [CompletionResultType]::ParameterValue, 'Manage the uv executable')
            [CompletionResult]::new('clean', 'clean', [CompletionResultType]::ParameterValue, 'Clear the cache, removing all entries or those linked to specific packages')
            [CompletionResult]::new('version', 'version', [CompletionResultType]::ParameterValue, 'Display uv''s version')
            [CompletionResult]::new('generate-shell-completion', 'generate-shell-completion', [CompletionResultType]::ParameterValue, 'Generate shell completion')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Display documentation for a command')
            break
        }
        'uv;run' {
            [CompletionResult]::new('--extra', '--extra', [CompletionResultType]::ParameterName, 'Include optional dependencies from the extra group name')
            [CompletionResult]::new('--with', '--with', [CompletionResultType]::ParameterName, 'Run with the given packages installed')
            [CompletionResult]::new('--with-editable', '--with-editable', [CompletionResultType]::ParameterName, 'Run with the given packages installed as editables')
            [CompletionResult]::new('--with-requirements', '--with-requirements', [CompletionResultType]::ParameterName, 'Run with all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Run the command in a specific package in the workspace')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the run environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the run environment.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all-extras', '--all-extras', [CompletionResultType]::ParameterName, 'Include all optional dependencies')
            [CompletionResult]::new('--no-all-extras', '--no-all-extras', [CompletionResultType]::ParameterName, 'no-all-extras')
            [CompletionResult]::new('--dev', '--dev', [CompletionResultType]::ParameterName, 'Include development dependencies')
            [CompletionResult]::new('--no-dev', '--no-dev', [CompletionResultType]::ParameterName, 'Omit development dependencies')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Run the command in an isolated virtual environment')
            [CompletionResult]::new('--no-sync', '--no-sync', [CompletionResultType]::ParameterName, 'Avoid syncing the virtual environment')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Run without updating the `uv.lock` file')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--no-project', '--no-project', [CompletionResultType]::ParameterName, 'Avoid discovering the project or workspace')
            [CompletionResult]::new('--show-resolution', '--show-resolution', [CompletionResultType]::ParameterName, 'Whether to show resolver and installer output from any environment modifications')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;init' {
            [CompletionResult]::new('--name', '--name', [CompletionResultType]::ParameterName, 'The name of the project')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use to determine the minimum supported Python version.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use to determine the minimum supported Python version.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--virtual', '--virtual', [CompletionResultType]::ParameterName, 'Create a virtual project, rather than a package')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Set up the project to be built as a Python package')
            [CompletionResult]::new('--no-package', '--no-package', [CompletionResultType]::ParameterName, 'Do not set up the project to be built as a Python package')
            [CompletionResult]::new('--app', '--app', [CompletionResultType]::ParameterName, 'Create a project for an application')
            [CompletionResult]::new('--lib', '--lib', [CompletionResultType]::ParameterName, 'Create a project for a library')
            [CompletionResult]::new('--no-readme', '--no-readme', [CompletionResultType]::ParameterName, 'Do not create a `README.md` file')
            [CompletionResult]::new('--no-pin-python', '--no-pin-python', [CompletionResultType]::ParameterName, 'Do not create a `.python-version` file for the project')
            [CompletionResult]::new('--no-workspace', '--no-workspace', [CompletionResultType]::ParameterName, 'Avoid discovering a workspace and create a standalone project')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;add' {
            [CompletionResult]::new('-r', '-r', [CompletionResultType]::ParameterName, 'Add all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('--requirements', '--requirements', [CompletionResultType]::ParameterName, 'Add all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('--optional', '--optional', [CompletionResultType]::ParameterName, 'Add the requirements to the specified optional dependency group')
            [CompletionResult]::new('--rev', '--rev', [CompletionResultType]::ParameterName, 'Commit to use when adding a dependency from Git')
            [CompletionResult]::new('--tag', '--tag', [CompletionResultType]::ParameterName, 'Tag to use when adding a dependency from Git')
            [CompletionResult]::new('--branch', '--branch', [CompletionResultType]::ParameterName, 'Branch to use when adding a dependency from Git')
            [CompletionResult]::new('--extra', '--extra', [CompletionResultType]::ParameterName, 'Extras to enable for the dependency')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Add the dependency to a specific package in the workspace')
            [CompletionResult]::new('--script', '--script', [CompletionResultType]::ParameterName, 'Add the dependency to the specified Python script, rather than to a project')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for resolving and syncing.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for resolving and syncing.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--dev', '--dev', [CompletionResultType]::ParameterName, 'Add the requirements as development dependencies')
            [CompletionResult]::new('--editable', '--editable', [CompletionResultType]::ParameterName, 'Add the requirements as editable')
            [CompletionResult]::new('--no-editable', '--no-editable', [CompletionResultType]::ParameterName, 'no-editable')
            [CompletionResult]::new('--raw-sources', '--raw-sources', [CompletionResultType]::ParameterName, 'Add source requirements to `project.dependencies`, rather than `tool.uv.sources`')
            [CompletionResult]::new('--no-sync', '--no-sync', [CompletionResultType]::ParameterName, 'Avoid syncing the virtual environment')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Add dependencies without re-locking the project')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;remove' {
            [CompletionResult]::new('--optional', '--optional', [CompletionResultType]::ParameterName, 'Remove the packages from the specified optional dependency group')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Remove the dependencies from a specific package in the workspace')
            [CompletionResult]::new('--script', '--script', [CompletionResultType]::ParameterName, 'Remove the dependency from the specified Python script, rather than from a project')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for resolving and syncing.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for resolving and syncing.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--dev', '--dev', [CompletionResultType]::ParameterName, 'Remove the packages from the development dependencies')
            [CompletionResult]::new('--no-sync', '--no-sync', [CompletionResultType]::ParameterName, 'Avoid syncing the virtual environment after re-locking the project')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Remove dependencies without re-locking the project')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;sync' {
            [CompletionResult]::new('--extra', '--extra', [CompletionResultType]::ParameterName, 'Include optional dependencies from the extra group name')
            [CompletionResult]::new('--no-install-package', '--no-install-package', [CompletionResultType]::ParameterName, 'Do not install the given package(s)')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Sync for a specific package in the workspace')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the project environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the project environment.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all-extras', '--all-extras', [CompletionResultType]::ParameterName, 'Include all optional dependencies')
            [CompletionResult]::new('--no-all-extras', '--no-all-extras', [CompletionResultType]::ParameterName, 'no-all-extras')
            [CompletionResult]::new('--dev', '--dev', [CompletionResultType]::ParameterName, 'Include development dependencies')
            [CompletionResult]::new('--no-dev', '--no-dev', [CompletionResultType]::ParameterName, 'Omit development dependencies')
            [CompletionResult]::new('--inexact', '--inexact', [CompletionResultType]::ParameterName, 'Do not remove extraneous packages present in the environment')
            [CompletionResult]::new('--exact', '--exact', [CompletionResultType]::ParameterName, 'Perform an exact sync, removing extraneous packages')
            [CompletionResult]::new('--no-install-project', '--no-install-project', [CompletionResultType]::ParameterName, 'Do not install the current project')
            [CompletionResult]::new('--no-install-workspace', '--no-install-workspace', [CompletionResultType]::ParameterName, 'Do not install any workspace members, including the root project')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Sync without updating the `uv.lock` file')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;lock' {
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use during resolution.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use during resolution.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Assert that a `uv.lock` exists, without updating it')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;export' {
            [CompletionResult]::new('--format', '--format', [CompletionResultType]::ParameterName, 'The format to which `uv.lock` should be exported')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Export the dependencies for a specific package in the workspace')
            [CompletionResult]::new('--extra', '--extra', [CompletionResultType]::ParameterName, 'Include optional dependencies from the extra group name')
            [CompletionResult]::new('-o', '-o', [CompletionResultType]::ParameterName, 'Write the exported requirements to the given file')
            [CompletionResult]::new('--output-file', '--output-file', [CompletionResultType]::ParameterName, 'Write the exported requirements to the given file')
            [CompletionResult]::new('--no-emit-package', '--no-emit-package', [CompletionResultType]::ParameterName, 'Do not emit the given package(s)')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use during resolution.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use during resolution.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all-extras', '--all-extras', [CompletionResultType]::ParameterName, 'Include all optional dependencies')
            [CompletionResult]::new('--no-all-extras', '--no-all-extras', [CompletionResultType]::ParameterName, 'no-all-extras')
            [CompletionResult]::new('--dev', '--dev', [CompletionResultType]::ParameterName, 'Include development dependencies')
            [CompletionResult]::new('--no-dev', '--no-dev', [CompletionResultType]::ParameterName, 'Omit development dependencies')
            [CompletionResult]::new('--hashes', '--hashes', [CompletionResultType]::ParameterName, 'Include hashes for all dependencies')
            [CompletionResult]::new('--no-hashes', '--no-hashes', [CompletionResultType]::ParameterName, 'Omit hashes in the generated output')
            [CompletionResult]::new('--no-emit-project', '--no-emit-project', [CompletionResultType]::ParameterName, 'Do not emit the current project')
            [CompletionResult]::new('--no-emit-workspace', '--no-emit-workspace', [CompletionResultType]::ParameterName, 'Do not emit any workspace members, including the root project')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Do not update the `uv.lock` before exporting')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tree' {
            [CompletionResult]::new('-d', '-d', [CompletionResultType]::ParameterName, 'Maximum display depth of the dependency tree')
            [CompletionResult]::new('--depth', '--depth', [CompletionResultType]::ParameterName, 'Maximum display depth of the dependency tree')
            [CompletionResult]::new('--prune', '--prune', [CompletionResultType]::ParameterName, 'Prune the given package from the display of the dependency tree')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Display only the specified packages')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--python-version', '--python-version', [CompletionResultType]::ParameterName, 'The Python version to use when filtering the tree')
            [CompletionResult]::new('--python-platform', '--python-platform', [CompletionResultType]::ParameterName, 'The platform to use when filtering the tree')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for locking and filtering.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for locking and filtering.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--universal', '--universal', [CompletionResultType]::ParameterName, 'Show a platform-independent dependency tree')
            [CompletionResult]::new('--no-dedupe', '--no-dedupe', [CompletionResultType]::ParameterName, 'Do not de-duplicate repeated dependencies. Usually, when a package has already displayed its dependencies, further occurrences will not re-display its dependencies, and will include a (*) to indicate it has already been shown. This flag will cause those duplicates to be repeated')
            [CompletionResult]::new('--invert', '--invert', [CompletionResultType]::ParameterName, 'Show the reverse dependencies for the given package. This flag will invert the tree and display the packages that depend on the given package')
            [CompletionResult]::new('--locked', '--locked', [CompletionResultType]::ParameterName, 'Assert that the `uv.lock` will remain unchanged')
            [CompletionResult]::new('--frozen', '--frozen', [CompletionResultType]::ParameterName, 'Display the requirements without locking the project')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('run', 'run', [CompletionResultType]::ParameterValue, 'Run a command provided by a Python package')
            [CompletionResult]::new('uvx', 'uvx', [CompletionResultType]::ParameterValue, 'Run a command provided by a Python package.')
            [CompletionResult]::new('install', 'install', [CompletionResultType]::ParameterValue, 'Install commands provided by a Python package')
            [CompletionResult]::new('upgrade', 'upgrade', [CompletionResultType]::ParameterValue, 'Upgrade installed tools')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List installed tools')
            [CompletionResult]::new('uninstall', 'uninstall', [CompletionResultType]::ParameterValue, 'Uninstall a tool')
            [CompletionResult]::new('update-shell', 'update-shell', [CompletionResultType]::ParameterValue, 'Ensure that the tool executable directory is on the `PATH`')
            [CompletionResult]::new('dir', 'dir', [CompletionResultType]::ParameterValue, 'Show the path to the uv tools directory')
            break
        }
        'uv;tool;run' {
            [CompletionResult]::new('--from', '--from', [CompletionResultType]::ParameterName, 'Use the given package to provide the command')
            [CompletionResult]::new('--with', '--with', [CompletionResultType]::ParameterName, 'Run with the given packages installed')
            [CompletionResult]::new('--with-requirements', '--with-requirements', [CompletionResultType]::ParameterName, 'Run with all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use to build the run environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use to build the run environment.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Run the tool in an isolated virtual environment, ignoring any already-installed tools')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--show-resolution', '--show-resolution', [CompletionResultType]::ParameterName, 'Whether to show resolver and installer output from any environment modifications')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;uvx' {
            [CompletionResult]::new('--from', '--from', [CompletionResultType]::ParameterName, 'Use the given package to provide the command')
            [CompletionResult]::new('--with', '--with', [CompletionResultType]::ParameterName, 'Run with the given packages installed')
            [CompletionResult]::new('--with-requirements', '--with-requirements', [CompletionResultType]::ParameterName, 'Run with all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use to build the run environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use to build the run environment.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Run the tool in an isolated virtual environment, ignoring any already-installed tools')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--show-resolution', '--show-resolution', [CompletionResultType]::ParameterName, 'Whether to show resolver and installer output from any environment modifications')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;install' {
            [CompletionResult]::new('--from', '--from', [CompletionResultType]::ParameterName, 'The package to install commands from')
            [CompletionResult]::new('--with', '--with', [CompletionResultType]::ParameterName, 'Include the following extra requirements')
            [CompletionResult]::new('--with-requirements', '--with-requirements', [CompletionResultType]::ParameterName, 'Run all requirements listed in the given `requirements.txt` files')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use to build the tool environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use to build the tool environment.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-e', '-e', [CompletionResultType]::ParameterName, 'e')
            [CompletionResult]::new('--editable', '--editable', [CompletionResultType]::ParameterName, 'editable')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--force', '--force', [CompletionResultType]::ParameterName, 'Force installation of the tool')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;upgrade' {
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all', '--all', [CompletionResultType]::ParameterName, 'Upgrade all tools')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;list' {
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'python-preference')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--show-paths', '--show-paths', [CompletionResultType]::ParameterName, 'Whether to display the path to each tool environment and installed executable')
            [CompletionResult]::new('--show-version-specifiers', '--show-version-specifiers', [CompletionResultType]::ParameterName, 'Whether to display the version specifier(s) used to install each tool')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'no-python-downloads')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;uninstall' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all', '--all', [CompletionResultType]::ParameterName, 'Uninstall all tools')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;update-shell' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;tool;dir' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--bin', '--bin', [CompletionResultType]::ParameterName, 'Show the directory into which `uv tool` will install executables.')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;python' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List the available Python installations')
            [CompletionResult]::new('install', 'install', [CompletionResultType]::ParameterValue, 'Download and install Python versions')
            [CompletionResult]::new('find', 'find', [CompletionResultType]::ParameterValue, 'Search for a Python installation')
            [CompletionResult]::new('pin', 'pin', [CompletionResultType]::ParameterValue, 'Pin to a specific Python version')
            [CompletionResult]::new('dir', 'dir', [CompletionResultType]::ParameterValue, 'Show the uv Python installation directory')
            [CompletionResult]::new('uninstall', 'uninstall', [CompletionResultType]::ParameterValue, 'Uninstall Python versions')
            break
        }
        'uv;python;list' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all-versions', '--all-versions', [CompletionResultType]::ParameterName, 'List all Python versions, including old patch versions')
            [CompletionResult]::new('--all-platforms', '--all-platforms', [CompletionResultType]::ParameterName, 'List Python downloads for all platforms')
            [CompletionResult]::new('--only-installed', '--only-installed', [CompletionResultType]::ParameterName, 'Only show installed Python versions, exclude available downloads')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;python;install' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-r', '-r', [CompletionResultType]::ParameterName, 'Reinstall the requested Python version, if it''s already installed')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall the requested Python version, if it''s already installed')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;python;find' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--no-project', '--no-project', [CompletionResultType]::ParameterName, 'Avoid discovering a project or workspace')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Only find system Python interpreters')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;python;pin' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--resolved', '--resolved', [CompletionResultType]::ParameterName, 'Write the resolved Python interpreter path instead of the request')
            [CompletionResult]::new('--no-resolved', '--no-resolved', [CompletionResultType]::ParameterName, 'no-resolved')
            [CompletionResult]::new('--no-project', '--no-project', [CompletionResultType]::ParameterName, 'Avoid validating the Python pin is compatible with the project or workspace')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;python;dir' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;python;uninstall' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all', '--all', [CompletionResultType]::ParameterName, 'Uninstall all managed Python versions')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('compile', 'compile', [CompletionResultType]::ParameterValue, 'Compile a `requirements.in` file to a `requirements.txt` file')
            [CompletionResult]::new('sync', 'sync', [CompletionResultType]::ParameterValue, 'Sync an environment with a `requirements.txt` file')
            [CompletionResult]::new('install', 'install', [CompletionResultType]::ParameterValue, 'Install packages into an environment')
            [CompletionResult]::new('uninstall', 'uninstall', [CompletionResultType]::ParameterValue, 'Uninstall packages from an environment')
            [CompletionResult]::new('freeze', 'freeze', [CompletionResultType]::ParameterValue, 'List, in requirements format, packages installed in an environment')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List, in tabular format, packages installed in an environment')
            [CompletionResult]::new('show', 'show', [CompletionResultType]::ParameterValue, 'Show information about one or more installed packages')
            [CompletionResult]::new('tree', 'tree', [CompletionResultType]::ParameterValue, 'Display the dependency tree for an environment')
            [CompletionResult]::new('check', 'check', [CompletionResultType]::ParameterValue, 'Verify installed packages have compatible dependencies')
            break
        }
        'uv;pip;compile' {
            [CompletionResult]::new('-c', '-c', [CompletionResultType]::ParameterName, 'Constrain versions using the given requirements files')
            [CompletionResult]::new('--constraint', '--constraint', [CompletionResultType]::ParameterName, 'Constrain versions using the given requirements files')
            [CompletionResult]::new('--override', '--override', [CompletionResultType]::ParameterName, 'Override versions using the given requirements files')
            [CompletionResult]::new('-b', '-b', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building source distributions')
            [CompletionResult]::new('--build-constraint', '--build-constraint', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building source distributions')
            [CompletionResult]::new('--extra', '--extra', [CompletionResultType]::ParameterName, 'Include optional dependencies from the extra group name; may be provided more than once')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-o', '-o', [CompletionResultType]::ParameterName, 'Write the compiled requirements to the given `requirements.txt` file')
            [CompletionResult]::new('--output-file', '--output-file', [CompletionResultType]::ParameterName, 'Write the compiled requirements to the given `requirements.txt` file')
            [CompletionResult]::new('--annotation-style', '--annotation-style', [CompletionResultType]::ParameterName, 'The style of the annotation comments included in the output file, used to indicate the source of each package')
            [CompletionResult]::new('--custom-compile-command', '--custom-compile-command', [CompletionResultType]::ParameterName, 'The header comment to include at the top of the output file generated by `uv pip compile`')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use during resolution.')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--only-binary', '--only-binary', [CompletionResultType]::ParameterName, 'Only use pre-built wheels; don''t build source distributions')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python version to use for resolution')
            [CompletionResult]::new('--python-version', '--python-version', [CompletionResultType]::ParameterName, 'The Python version to use for resolution')
            [CompletionResult]::new('--python-platform', '--python-platform', [CompletionResultType]::ParameterName, 'The platform for which requirements should be resolved')
            [CompletionResult]::new('--no-emit-package', '--no-emit-package', [CompletionResultType]::ParameterName, 'Specify a package to omit from the output resolution. Its dependencies will still be included in the resolution. Equivalent to pip-compile''s `--unsafe-package` option')
            [CompletionResult]::new('--resolver', '--resolver', [CompletionResultType]::ParameterName, 'resolver')
            [CompletionResult]::new('--max-rounds', '--max-rounds', [CompletionResultType]::ParameterName, 'max-rounds')
            [CompletionResult]::new('--cert', '--cert', [CompletionResultType]::ParameterName, 'cert')
            [CompletionResult]::new('--client-cert', '--client-cert', [CompletionResultType]::ParameterName, 'client-cert')
            [CompletionResult]::new('--config', '--config', [CompletionResultType]::ParameterName, 'config')
            [CompletionResult]::new('--pip-args', '--pip-args', [CompletionResultType]::ParameterName, 'pip-args')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all-extras', '--all-extras', [CompletionResultType]::ParameterName, 'Include all optional dependencies')
            [CompletionResult]::new('--no-all-extras', '--no-all-extras', [CompletionResultType]::ParameterName, 'no-all-extras')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--no-deps', '--no-deps', [CompletionResultType]::ParameterName, 'Ignore package dependencies, instead only add those packages explicitly listed on the command line to the resulting the requirements file')
            [CompletionResult]::new('--deps', '--deps', [CompletionResultType]::ParameterName, 'deps')
            [CompletionResult]::new('--no-strip-extras', '--no-strip-extras', [CompletionResultType]::ParameterName, 'Include extras in the output file')
            [CompletionResult]::new('--strip-extras', '--strip-extras', [CompletionResultType]::ParameterName, 'strip-extras')
            [CompletionResult]::new('--no-strip-markers', '--no-strip-markers', [CompletionResultType]::ParameterName, 'Include environment markers in the output file')
            [CompletionResult]::new('--strip-markers', '--strip-markers', [CompletionResultType]::ParameterName, 'strip-markers')
            [CompletionResult]::new('--no-annotate', '--no-annotate', [CompletionResultType]::ParameterName, 'Exclude comment annotations indicating the source of each package')
            [CompletionResult]::new('--annotate', '--annotate', [CompletionResultType]::ParameterName, 'annotate')
            [CompletionResult]::new('--no-header', '--no-header', [CompletionResultType]::ParameterName, 'Exclude the comment header at the top of the generated output file')
            [CompletionResult]::new('--header', '--header', [CompletionResultType]::ParameterName, 'header')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Install packages into the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--generate-hashes', '--generate-hashes', [CompletionResultType]::ParameterName, 'Include distribution hashes in the output file')
            [CompletionResult]::new('--no-generate-hashes', '--no-generate-hashes', [CompletionResultType]::ParameterName, 'no-generate-hashes')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--universal', '--universal', [CompletionResultType]::ParameterName, 'Perform a universal resolution, attempting to generate a single `requirements.txt` output file that is compatible with all operating systems, architectures, and Python implementations')
            [CompletionResult]::new('--no-universal', '--no-universal', [CompletionResultType]::ParameterName, 'no-universal')
            [CompletionResult]::new('--emit-index-url', '--emit-index-url', [CompletionResultType]::ParameterName, 'Include `--index-url` and `--extra-index-url` entries in the generated output file')
            [CompletionResult]::new('--no-emit-index-url', '--no-emit-index-url', [CompletionResultType]::ParameterName, 'no-emit-index-url')
            [CompletionResult]::new('--emit-find-links', '--emit-find-links', [CompletionResultType]::ParameterName, 'Include `--find-links` entries in the generated output file')
            [CompletionResult]::new('--no-emit-find-links', '--no-emit-find-links', [CompletionResultType]::ParameterName, 'no-emit-find-links')
            [CompletionResult]::new('--emit-build-options', '--emit-build-options', [CompletionResultType]::ParameterName, 'Include `--no-binary` and `--only-binary` entries in the generated output file')
            [CompletionResult]::new('--no-emit-build-options', '--no-emit-build-options', [CompletionResultType]::ParameterName, 'no-emit-build-options')
            [CompletionResult]::new('--emit-marker-expression', '--emit-marker-expression', [CompletionResultType]::ParameterName, 'Whether to emit a marker string indicating when it is known that the resulting set of pinned dependencies is valid')
            [CompletionResult]::new('--no-emit-marker-expression', '--no-emit-marker-expression', [CompletionResultType]::ParameterName, 'no-emit-marker-expression')
            [CompletionResult]::new('--emit-index-annotation', '--emit-index-annotation', [CompletionResultType]::ParameterName, 'Include comment annotations indicating the index used to resolve each package (e.g., `# from https://pypi.org/simple`)')
            [CompletionResult]::new('--no-emit-index-annotation', '--no-emit-index-annotation', [CompletionResultType]::ParameterName, 'no-emit-index-annotation')
            [CompletionResult]::new('--allow-unsafe', '--allow-unsafe', [CompletionResultType]::ParameterName, 'allow-unsafe')
            [CompletionResult]::new('--no-allow-unsafe', '--no-allow-unsafe', [CompletionResultType]::ParameterName, 'no-allow-unsafe')
            [CompletionResult]::new('--reuse-hashes', '--reuse-hashes', [CompletionResultType]::ParameterName, 'reuse-hashes')
            [CompletionResult]::new('--no-reuse-hashes', '--no-reuse-hashes', [CompletionResultType]::ParameterName, 'no-reuse-hashes')
            [CompletionResult]::new('--emit-trusted-host', '--emit-trusted-host', [CompletionResultType]::ParameterName, 'emit-trusted-host')
            [CompletionResult]::new('--no-emit-trusted-host', '--no-emit-trusted-host', [CompletionResultType]::ParameterName, 'no-emit-trusted-host')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'no-config')
            [CompletionResult]::new('--emit-options', '--emit-options', [CompletionResultType]::ParameterName, 'emit-options')
            [CompletionResult]::new('--no-emit-options', '--no-emit-options', [CompletionResultType]::ParameterName, 'no-emit-options')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;sync' {
            [CompletionResult]::new('-c', '-c', [CompletionResultType]::ParameterName, 'Constrain versions using the given requirements files')
            [CompletionResult]::new('--constraint', '--constraint', [CompletionResultType]::ParameterName, 'Constrain versions using the given requirements files')
            [CompletionResult]::new('-b', '-b', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building source distributions')
            [CompletionResult]::new('--build-constraint', '--build-constraint', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building source distributions')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter into which packages should be installed.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter into which packages should be installed.')
            [CompletionResult]::new('--target', '--target', [CompletionResultType]::ParameterName, 'Install packages into the specified directory, rather than into the virtual or system Python environment. The packages will be installed at the top-level of the directory')
            [CompletionResult]::new('--prefix', '--prefix', [CompletionResultType]::ParameterName, 'Install packages into `lib`, `bin`, and other top-level folders under the specified directory, as if a virtual environment were present at that location')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--only-binary', '--only-binary', [CompletionResultType]::ParameterName, 'Only use pre-built wheels; don''t build source distributions')
            [CompletionResult]::new('--python-version', '--python-version', [CompletionResultType]::ParameterName, 'The minimum Python version that should be supported by the requirements (e.g., `3.7` or `3.7.9`)')
            [CompletionResult]::new('--python-platform', '--python-platform', [CompletionResultType]::ParameterName, 'The platform for which requirements should be installed')
            [CompletionResult]::new('--python-executable', '--python-executable', [CompletionResultType]::ParameterName, 'python-executable')
            [CompletionResult]::new('--cert', '--cert', [CompletionResultType]::ParameterName, 'cert')
            [CompletionResult]::new('--client-cert', '--client-cert', [CompletionResultType]::ParameterName, 'client-cert')
            [CompletionResult]::new('--config', '--config', [CompletionResultType]::ParameterName, 'config')
            [CompletionResult]::new('--pip-args', '--pip-args', [CompletionResultType]::ParameterName, 'pip-args')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--require-hashes', '--require-hashes', [CompletionResultType]::ParameterName, 'Require a matching hash for each requirement')
            [CompletionResult]::new('--no-require-hashes', '--no-require-hashes', [CompletionResultType]::ParameterName, 'no-require-hashes')
            [CompletionResult]::new('--verify-hashes', '--verify-hashes', [CompletionResultType]::ParameterName, 'Validate any hashes provided in the requirements file')
            [CompletionResult]::new('--no-verify-hashes', '--no-verify-hashes', [CompletionResultType]::ParameterName, 'no-verify-hashes')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Install packages into the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--break-system-packages', '--break-system-packages', [CompletionResultType]::ParameterName, 'Allow uv to modify an `EXTERNALLY-MANAGED` Python installation')
            [CompletionResult]::new('--no-break-system-packages', '--no-break-system-packages', [CompletionResultType]::ParameterName, 'no-break-system-packages')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--allow-empty-requirements', '--allow-empty-requirements', [CompletionResultType]::ParameterName, 'Allow sync of empty requirements, which will clear the environment of all packages')
            [CompletionResult]::new('--no-allow-empty-requirements', '--no-allow-empty-requirements', [CompletionResultType]::ParameterName, 'no-allow-empty-requirements')
            [CompletionResult]::new('--strict', '--strict', [CompletionResultType]::ParameterName, 'Validate the Python environment after completing the installation, to detect and with missing dependencies or other issues')
            [CompletionResult]::new('--no-strict', '--no-strict', [CompletionResultType]::ParameterName, 'no-strict')
            [CompletionResult]::new('--dry-run', '--dry-run', [CompletionResultType]::ParameterName, 'Perform a dry run, i.e., don''t actually install anything but resolve the dependencies and print the resulting plan')
            [CompletionResult]::new('-a', '-a', [CompletionResultType]::ParameterName, 'a')
            [CompletionResult]::new('--ask', '--ask', [CompletionResultType]::ParameterName, 'ask')
            [CompletionResult]::new('--user', '--user', [CompletionResultType]::ParameterName, 'user')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'no-config')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;install' {
            [CompletionResult]::new('-r', '-r', [CompletionResultType]::ParameterName, 'Install all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('--requirement', '--requirement', [CompletionResultType]::ParameterName, 'Install all packages listed in the given `requirements.txt` files')
            [CompletionResult]::new('-e', '-e', [CompletionResultType]::ParameterName, 'Install the editable package based on the provided local file path')
            [CompletionResult]::new('--editable', '--editable', [CompletionResultType]::ParameterName, 'Install the editable package based on the provided local file path')
            [CompletionResult]::new('-c', '-c', [CompletionResultType]::ParameterName, 'Constrain versions using the given requirements files')
            [CompletionResult]::new('--constraint', '--constraint', [CompletionResultType]::ParameterName, 'Constrain versions using the given requirements files')
            [CompletionResult]::new('--override', '--override', [CompletionResultType]::ParameterName, 'Override versions using the given requirements files')
            [CompletionResult]::new('-b', '-b', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building source distributions')
            [CompletionResult]::new('--build-constraint', '--build-constraint', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building source distributions')
            [CompletionResult]::new('--extra', '--extra', [CompletionResultType]::ParameterName, 'Include optional dependencies from the extra group name; may be provided more than once')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--reinstall-package', '--reinstall-package', [CompletionResultType]::ParameterName, 'Reinstall a specific package, regardless of whether it''s already installed. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter into which packages should be installed.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter into which packages should be installed.')
            [CompletionResult]::new('--target', '--target', [CompletionResultType]::ParameterName, 'Install packages into the specified directory, rather than into the virtual or system Python environment. The packages will be installed at the top-level of the directory')
            [CompletionResult]::new('--prefix', '--prefix', [CompletionResultType]::ParameterName, 'Install packages into `lib`, `bin`, and other top-level folders under the specified directory, as if a virtual environment were present at that location')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--only-binary', '--only-binary', [CompletionResultType]::ParameterName, 'Only use pre-built wheels; don''t build source distributions')
            [CompletionResult]::new('--python-version', '--python-version', [CompletionResultType]::ParameterName, 'The minimum Python version that should be supported by the requirements (e.g., `3.7` or `3.7.9`)')
            [CompletionResult]::new('--python-platform', '--python-platform', [CompletionResultType]::ParameterName, 'The platform for which requirements should be installed')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--all-extras', '--all-extras', [CompletionResultType]::ParameterName, 'Include all optional dependencies')
            [CompletionResult]::new('--no-all-extras', '--no-all-extras', [CompletionResultType]::ParameterName, 'no-all-extras')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--reinstall', '--reinstall', [CompletionResultType]::ParameterName, 'Reinstall all packages, regardless of whether they''re already installed. Implies `--refresh`')
            [CompletionResult]::new('--no-reinstall', '--no-reinstall', [CompletionResultType]::ParameterName, 'no-reinstall')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--compile-bytecode', '--compile-bytecode', [CompletionResultType]::ParameterName, 'Compile Python files to bytecode after installation')
            [CompletionResult]::new('--no-compile-bytecode', '--no-compile-bytecode', [CompletionResultType]::ParameterName, 'no-compile-bytecode')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('--no-deps', '--no-deps', [CompletionResultType]::ParameterName, 'Ignore package dependencies, instead only installing those packages explicitly listed on the command line or in the requirements files')
            [CompletionResult]::new('--deps', '--deps', [CompletionResultType]::ParameterName, 'deps')
            [CompletionResult]::new('--require-hashes', '--require-hashes', [CompletionResultType]::ParameterName, 'Require a matching hash for each requirement')
            [CompletionResult]::new('--no-require-hashes', '--no-require-hashes', [CompletionResultType]::ParameterName, 'no-require-hashes')
            [CompletionResult]::new('--verify-hashes', '--verify-hashes', [CompletionResultType]::ParameterName, 'Validate any hashes provided in the requirements file')
            [CompletionResult]::new('--no-verify-hashes', '--no-verify-hashes', [CompletionResultType]::ParameterName, 'no-verify-hashes')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Install packages into the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--break-system-packages', '--break-system-packages', [CompletionResultType]::ParameterName, 'Allow uv to modify an `EXTERNALLY-MANAGED` Python installation')
            [CompletionResult]::new('--no-break-system-packages', '--no-break-system-packages', [CompletionResultType]::ParameterName, 'no-break-system-packages')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--strict', '--strict', [CompletionResultType]::ParameterName, 'Validate the Python environment after completing the installation, to detect and with missing dependencies or other issues')
            [CompletionResult]::new('--no-strict', '--no-strict', [CompletionResultType]::ParameterName, 'no-strict')
            [CompletionResult]::new('--dry-run', '--dry-run', [CompletionResultType]::ParameterName, 'Perform a dry run, i.e., don''t actually install anything but resolve the dependencies and print the resulting plan')
            [CompletionResult]::new('--disable-pip-version-check', '--disable-pip-version-check', [CompletionResultType]::ParameterName, 'disable-pip-version-check')
            [CompletionResult]::new('--user', '--user', [CompletionResultType]::ParameterName, 'user')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;uninstall' {
            [CompletionResult]::new('-r', '-r', [CompletionResultType]::ParameterName, 'Uninstall all packages listed in the given requirements files')
            [CompletionResult]::new('--requirement', '--requirement', [CompletionResultType]::ParameterName, 'Uninstall all packages listed in the given requirements files')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter from which packages should be uninstalled.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter from which packages should be uninstalled.')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for remote requirements files')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--target', '--target', [CompletionResultType]::ParameterName, 'Uninstall packages from the specified `--target` directory')
            [CompletionResult]::new('--prefix', '--prefix', [CompletionResultType]::ParameterName, 'Uninstall packages from the specified `--prefix` directory')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Use the system Python to uninstall packages')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--break-system-packages', '--break-system-packages', [CompletionResultType]::ParameterName, 'Allow uv to modify an `EXTERNALLY-MANAGED` Python installation')
            [CompletionResult]::new('--no-break-system-packages', '--no-break-system-packages', [CompletionResultType]::ParameterName, 'no-break-system-packages')
            [CompletionResult]::new('--disable-pip-version-check', '--disable-pip-version-check', [CompletionResultType]::ParameterName, 'disable-pip-version-check')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;freeze' {
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be listed.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be listed.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--exclude-editable', '--exclude-editable', [CompletionResultType]::ParameterName, 'Exclude any editable packages from output')
            [CompletionResult]::new('--strict', '--strict', [CompletionResultType]::ParameterName, 'Validate the Python environment, to detect packages with missing dependencies and other issues')
            [CompletionResult]::new('--no-strict', '--no-strict', [CompletionResultType]::ParameterName, 'no-strict')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'List packages in the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--disable-pip-version-check', '--disable-pip-version-check', [CompletionResultType]::ParameterName, 'disable-pip-version-check')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;list' {
            [CompletionResult]::new('--exclude', '--exclude', [CompletionResultType]::ParameterName, 'Exclude the specified package(s) from the output')
            [CompletionResult]::new('--format', '--format', [CompletionResultType]::ParameterName, 'Select the output format between: `columns` (default), `freeze`, or `json`')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be listed.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be listed.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-e', '-e', [CompletionResultType]::ParameterName, 'Only include editable projects')
            [CompletionResult]::new('--editable', '--editable', [CompletionResultType]::ParameterName, 'Only include editable projects')
            [CompletionResult]::new('--exclude-editable', '--exclude-editable', [CompletionResultType]::ParameterName, 'Exclude any editable packages from output')
            [CompletionResult]::new('--strict', '--strict', [CompletionResultType]::ParameterName, 'Validate the Python environment, to detect packages with missing dependencies and other issues')
            [CompletionResult]::new('--no-strict', '--no-strict', [CompletionResultType]::ParameterName, 'no-strict')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'List packages in the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--disable-pip-version-check', '--disable-pip-version-check', [CompletionResultType]::ParameterName, 'disable-pip-version-check')
            [CompletionResult]::new('--outdated', '--outdated', [CompletionResultType]::ParameterName, 'outdated')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;show' {
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to find the package in.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to find the package in.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--strict', '--strict', [CompletionResultType]::ParameterName, 'Validate the Python environment, to detect packages with missing dependencies and other issues')
            [CompletionResult]::new('--no-strict', '--no-strict', [CompletionResultType]::ParameterName, 'no-strict')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Show a package in the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--disable-pip-version-check', '--disable-pip-version-check', [CompletionResultType]::ParameterName, 'disable-pip-version-check')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;tree' {
            [CompletionResult]::new('-d', '-d', [CompletionResultType]::ParameterName, 'Maximum display depth of the dependency tree')
            [CompletionResult]::new('--depth', '--depth', [CompletionResultType]::ParameterName, 'Maximum display depth of the dependency tree')
            [CompletionResult]::new('--prune', '--prune', [CompletionResultType]::ParameterName, 'Prune the given package from the display of the dependency tree')
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Display only the specified packages')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be listed.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be listed.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--show-version-specifiers', '--show-version-specifiers', [CompletionResultType]::ParameterName, 'Show the version constraint(s) imposed on each package')
            [CompletionResult]::new('--no-dedupe', '--no-dedupe', [CompletionResultType]::ParameterName, 'Do not de-duplicate repeated dependencies. Usually, when a package has already displayed its dependencies, further occurrences will not re-display its dependencies, and will include a (*) to indicate it has already been shown. This flag will cause those duplicates to be repeated')
            [CompletionResult]::new('--invert', '--invert', [CompletionResultType]::ParameterName, 'Show the reverse dependencies for the given package. This flag will invert the tree and display the packages that depend on the given package')
            [CompletionResult]::new('--strict', '--strict', [CompletionResultType]::ParameterName, 'Validate the Python environment, to detect packages with missing dependencies and other issues')
            [CompletionResult]::new('--no-strict', '--no-strict', [CompletionResultType]::ParameterName, 'no-strict')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'List packages in the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('--disable-pip-version-check', '--disable-pip-version-check', [CompletionResultType]::ParameterName, 'disable-pip-version-check')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;pip;check' {
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be checked.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter for which packages should be checked.')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Check packages in the system Python environment')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'no-system')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;venv' {
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the virtual environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the virtual environment.')
            [CompletionResult]::new('--prompt', '--prompt', [CompletionResultType]::ParameterName, 'Provide an alternative prompt prefix for the virtual environment.')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--system', '--system', [CompletionResultType]::ParameterName, 'Ignore virtual environments when searching for the Python interpreter')
            [CompletionResult]::new('--no-system', '--no-system', [CompletionResultType]::ParameterName, 'This flag is included for compatibility only, it has no effect')
            [CompletionResult]::new('--no-project', '--no-project', [CompletionResultType]::ParameterName, 'Avoid discovering a project or workspace')
            [CompletionResult]::new('--seed', '--seed', [CompletionResultType]::ParameterName, 'Install seed packages (one or more of: `pip`, `setuptools`, and `wheel`) into the virtual environment')
            [CompletionResult]::new('--allow-existing', '--allow-existing', [CompletionResultType]::ParameterName, 'Preserve any existing files or directories at the target path')
            [CompletionResult]::new('--system-site-packages', '--system-site-packages', [CompletionResultType]::ParameterName, 'Give the virtual environment access to the system site packages directory')
            [CompletionResult]::new('--relocatable', '--relocatable', [CompletionResultType]::ParameterName, 'Make the virtual environment relocatable')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('--clear', '--clear', [CompletionResultType]::ParameterName, 'clear')
            [CompletionResult]::new('--no-seed', '--no-seed', [CompletionResultType]::ParameterName, 'no-seed')
            [CompletionResult]::new('--no-pip', '--no-pip', [CompletionResultType]::ParameterName, 'no-pip')
            [CompletionResult]::new('--no-setuptools', '--no-setuptools', [CompletionResultType]::ParameterName, 'no-setuptools')
            [CompletionResult]::new('--no-wheel', '--no-wheel', [CompletionResultType]::ParameterName, 'no-wheel')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;build' {
            [CompletionResult]::new('--package', '--package', [CompletionResultType]::ParameterName, 'Build a specific package in the workspace')
            [CompletionResult]::new('-o', '-o', [CompletionResultType]::ParameterName, 'The output directory to which distributions should be written')
            [CompletionResult]::new('--out-dir', '--out-dir', [CompletionResultType]::ParameterName, 'The output directory to which distributions should be written')
            [CompletionResult]::new('-b', '-b', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building distributions')
            [CompletionResult]::new('--build-constraint', '--build-constraint', [CompletionResultType]::ParameterName, 'Constrain build dependencies using the given requirements files when building distributions')
            [CompletionResult]::new('-p', '-p', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the build environment.')
            [CompletionResult]::new('--python', '--python', [CompletionResultType]::ParameterName, 'The Python interpreter to use for the build environment.')
            [CompletionResult]::new('-i', '-i', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--index-url', '--index-url', [CompletionResultType]::ParameterName, 'The URL of the Python package index (by default: <https://pypi.org/simple>)')
            [CompletionResult]::new('--extra-index-url', '--extra-index-url', [CompletionResultType]::ParameterName, 'Extra URLs of package indexes to use, in addition to `--index-url`')
            [CompletionResult]::new('-f', '-f', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('--find-links', '--find-links', [CompletionResultType]::ParameterName, 'Locations to search for candidate distributions, in addition to those found in the registry indexes')
            [CompletionResult]::new('-P', '-P ', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--upgrade-package', '--upgrade-package', [CompletionResultType]::ParameterName, 'Allow upgrades for a specific package, ignoring pinned versions in any existing output file. Implies `--refresh-package`')
            [CompletionResult]::new('--index-strategy', '--index-strategy', [CompletionResultType]::ParameterName, 'The strategy to use when resolving against multiple index URLs')
            [CompletionResult]::new('--keyring-provider', '--keyring-provider', [CompletionResultType]::ParameterName, 'Attempt to use `keyring` for authentication for index URLs')
            [CompletionResult]::new('--allow-insecure-host', '--allow-insecure-host', [CompletionResultType]::ParameterName, 'Allow insecure connections to a host')
            [CompletionResult]::new('--resolution', '--resolution', [CompletionResultType]::ParameterName, 'The strategy to use when selecting between the different compatible versions for a given package requirement')
            [CompletionResult]::new('--prerelease', '--prerelease', [CompletionResultType]::ParameterName, 'The strategy to use when considering pre-release versions')
            [CompletionResult]::new('-C', '-C ', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--config-setting', '--config-setting', [CompletionResultType]::ParameterName, 'Settings to pass to the PEP 517 build backend, specified as `KEY=VALUE` pairs')
            [CompletionResult]::new('--no-build-isolation-package', '--no-build-isolation-package', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions for a specific package')
            [CompletionResult]::new('--exclude-newer', '--exclude-newer', [CompletionResultType]::ParameterName, 'Limit candidate packages to those that were uploaded prior to the given date')
            [CompletionResult]::new('--link-mode', '--link-mode', [CompletionResultType]::ParameterName, 'The method to use when installing packages from the global cache')
            [CompletionResult]::new('--no-build-package', '--no-build-package', [CompletionResultType]::ParameterName, 'Don''t build source distributions for a specific package')
            [CompletionResult]::new('--no-binary-package', '--no-binary-package', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels for a specific package')
            [CompletionResult]::new('--refresh-package', '--refresh-package', [CompletionResultType]::ParameterName, 'Refresh cached data for a specific package')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--sdist', '--sdist', [CompletionResultType]::ParameterName, 'Build a source distribution ("sdist") from the given directory')
            [CompletionResult]::new('--wheel', '--wheel', [CompletionResultType]::ParameterName, 'Build a binary distribution ("wheel") from the given directory')
            [CompletionResult]::new('--require-hashes', '--require-hashes', [CompletionResultType]::ParameterName, 'Require a matching hash for each build requirement')
            [CompletionResult]::new('--no-require-hashes', '--no-require-hashes', [CompletionResultType]::ParameterName, 'no-require-hashes')
            [CompletionResult]::new('--verify-hashes', '--verify-hashes', [CompletionResultType]::ParameterName, 'Validate any hashes provided in the build constraints file')
            [CompletionResult]::new('--no-verify-hashes', '--no-verify-hashes', [CompletionResultType]::ParameterName, 'no-verify-hashes')
            [CompletionResult]::new('--no-index', '--no-index', [CompletionResultType]::ParameterName, 'Ignore the registry index (e.g., PyPI), instead relying on direct URL dependencies and those provided via `--find-links`')
            [CompletionResult]::new('-U', '-U ', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--upgrade', '--upgrade', [CompletionResultType]::ParameterName, 'Allow package upgrades, ignoring pinned versions in any existing output file. Implies `--refresh`')
            [CompletionResult]::new('--no-upgrade', '--no-upgrade', [CompletionResultType]::ParameterName, 'no-upgrade')
            [CompletionResult]::new('--pre', '--pre', [CompletionResultType]::ParameterName, 'pre')
            [CompletionResult]::new('--no-build-isolation', '--no-build-isolation', [CompletionResultType]::ParameterName, 'Disable isolation when building source distributions')
            [CompletionResult]::new('--build-isolation', '--build-isolation', [CompletionResultType]::ParameterName, 'build-isolation')
            [CompletionResult]::new('--no-sources', '--no-sources', [CompletionResultType]::ParameterName, 'Ignore the `tool.uv.sources` table when resolving dependencies. Used to lock against the standards-compliant, publishable package metadata, as opposed to using any local or Git sources')
            [CompletionResult]::new('--no-build', '--no-build', [CompletionResultType]::ParameterName, 'Don''t build source distributions')
            [CompletionResult]::new('--build', '--build', [CompletionResultType]::ParameterName, 'build')
            [CompletionResult]::new('--no-binary', '--no-binary', [CompletionResultType]::ParameterName, 'Don''t install pre-built wheels')
            [CompletionResult]::new('--binary', '--binary', [CompletionResultType]::ParameterName, 'binary')
            [CompletionResult]::new('--refresh', '--refresh', [CompletionResultType]::ParameterName, 'Refresh all cached data')
            [CompletionResult]::new('--no-refresh', '--no-refresh', [CompletionResultType]::ParameterName, 'no-refresh')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;cache' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('clean', 'clean', [CompletionResultType]::ParameterValue, 'Clear the cache, removing all entries or those linked to specific packages')
            [CompletionResult]::new('prune', 'prune', [CompletionResultType]::ParameterValue, 'Prune all unreachable objects from the cache')
            [CompletionResult]::new('dir', 'dir', [CompletionResultType]::ParameterValue, 'Show the cache directory')
            break
        }
        'uv;cache;clean' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;cache;prune' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--ci', '--ci', [CompletionResultType]::ParameterName, 'Optimize the cache for persistence in a continuous integration environment, like GitHub Actions')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;cache;dir' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;self' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update uv')
            break
        }
        'uv;self;update' {
            [CompletionResult]::new('--token', '--token', [CompletionResultType]::ParameterName, 'A GitHub token for authentication. A token is not required but can be used to reduce the chance of encountering rate limits')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;clean' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;version' {
            [CompletionResult]::new('--output-format', '--output-format', [CompletionResultType]::ParameterName, 'output-format')
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
        'uv;generate-shell-completion' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'cache-dir')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'python-preference')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'color')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'config-file')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'n')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'no-cache')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'no-python-downloads')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'q')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'quiet')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'v')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'verbose')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'offline')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'no-progress')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'no-config')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'h')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'help')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'V')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'version')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            break
        }
        'uv;help' {
            [CompletionResult]::new('--cache-dir', '--cache-dir', [CompletionResultType]::ParameterName, 'Path to the cache directory')
            [CompletionResult]::new('--python-preference', '--python-preference', [CompletionResultType]::ParameterName, 'Whether to prefer uv-managed or system Python installations')
            [CompletionResult]::new('--python-fetch', '--python-fetch', [CompletionResultType]::ParameterName, 'Deprecated version of [`Self::python_downloads`]')
            [CompletionResult]::new('--color', '--color', [CompletionResultType]::ParameterName, 'Control colors in output')
            [CompletionResult]::new('--directory', '--directory', [CompletionResultType]::ParameterName, 'Change to the given directory prior to running the command')
            [CompletionResult]::new('--config-file', '--config-file', [CompletionResultType]::ParameterName, 'The path to a `uv.toml` file to use for configuration')
            [CompletionResult]::new('--no-pager', '--no-pager', [CompletionResultType]::ParameterName, 'Disable pager when printing help')
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--no-cache', '--no-cache', [CompletionResultType]::ParameterName, 'Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation')
            [CompletionResult]::new('--allow-python-downloads', '--allow-python-downloads', [CompletionResultType]::ParameterName, 'Allow automatically downloading Python when required. [env: "UV_PYTHON_DOWNLOADS=auto"]')
            [CompletionResult]::new('--no-python-downloads', '--no-python-downloads', [CompletionResultType]::ParameterName, 'Disable automatic downloads of Python. [env: "UV_PYTHON_DOWNLOADS=never"]')
            [CompletionResult]::new('-q', '-q', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('--quiet', '--quiet', [CompletionResultType]::ParameterName, 'Do not print any output')
            [CompletionResult]::new('-v', '-v', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--verbose', '--verbose', [CompletionResultType]::ParameterName, 'Use verbose output')
            [CompletionResult]::new('--no-color', '--no-color', [CompletionResultType]::ParameterName, 'Disable colors')
            [CompletionResult]::new('--native-tls', '--native-tls', [CompletionResultType]::ParameterName, 'Whether to load TLS certificates from the platform''s native certificate store')
            [CompletionResult]::new('--no-native-tls', '--no-native-tls', [CompletionResultType]::ParameterName, 'no-native-tls')
            [CompletionResult]::new('--offline', '--offline', [CompletionResultType]::ParameterName, 'Disable network access')
            [CompletionResult]::new('--no-offline', '--no-offline', [CompletionResultType]::ParameterName, 'no-offline')
            [CompletionResult]::new('--preview', '--preview', [CompletionResultType]::ParameterName, 'Whether to enable experimental, preview features')
            [CompletionResult]::new('--no-preview', '--no-preview', [CompletionResultType]::ParameterName, 'no-preview')
            [CompletionResult]::new('--isolated', '--isolated', [CompletionResultType]::ParameterName, 'Avoid discovering a `pyproject.toml` or `uv.toml` file')
            [CompletionResult]::new('--show-settings', '--show-settings', [CompletionResultType]::ParameterName, 'Show the resolved settings for the current command')
            [CompletionResult]::new('--no-progress', '--no-progress', [CompletionResultType]::ParameterName, 'Hide all progress outputs')
            [CompletionResult]::new('--no-config', '--no-config', [CompletionResultType]::ParameterName, 'Avoid discovering configuration files (`pyproject.toml`, `uv.toml`)')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Display the concise help for this command')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Display the uv version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Display the uv version')
            break
        }
    })

    $completions.Where{ $_.CompletionText -like "$wordToComplete*" } |
        Sort-Object -Property ListItemText
}
